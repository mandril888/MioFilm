angular.module( 'myAngularWeb', [ 'ngRoute', 'controllers', 'config', 'services', 'ngStorage' ] )
angular.module( 'config', [ ] )
	.config( function( $routeProvider ){
			$routeProvider
				.when('/',{
					templateUrl: 'modules/home/home.html',
					controller: 'homeController'
				})
				.when('/home',{
					templateUrl: 'modules/home/home.html',
					controller: 'homeController'
				})
				.when('/specifications/:FILMID',{
					templateUrl: 'modules/specifications/specifications.html',
					controller: 'specificationsController'
				})
				.when('/about',{
					templateUrl: 'modules/about/about.html',
					controller: 'aboutController'
				})
				.otherwise({ redirectTo: '/' }); ;
	})
angular.module( 'controllers', [ 'homeModule', 'specificationsModule', 'aboutModule' ] )
angular.module( 'services', [ 'homeService', 'specificationsService', 'aboutService' ] );
angular.module( 'aboutModule', [ ] )
    .controller( 'aboutController' , function ( $scope ) {
    }) 
angular.module( 'aboutService', [ ] )
    .factory('aboutService', function($http) {
    }) 
angular.module( 'homeModule', [ ] )
	.controller( 'homeController' , function ( $scope, $http, homeService, $q ) {

		$scope.imageNotFoundCover = '../../img/image-not-found-cover.jpg';
		$scope.infoFilmSearched = "";


		// Estos valores vendr치n del filtro y tendr치n que entrar por los argumentos de la funci칩n
			var numberFilmsToSearch = 6;
			var numVotesMinimum = 10;
			var rateToFilter = 5;
			var yearToFilter = 2000;
			var durationToFilter = 90;


		$scope.submit = function() {
			$('.list-films').css('display', 'flex')
			$('.insert-text').html('<h1>You have searched: <span class="item-searched">'+ $scope.filmToSearch + '</span></h1>')

			homeService.getInfoFilm( $scope.filmToSearch )
				.then( function ( dataFilmSearched ){
					$scope.infoFilmSearched = dataFilmSearched.data.results;
					console.log($scope.infoFilmSearched);
				})
		}

		$scope.searchFilmByMood = function( mood ) {
			$('.list-films').css('display', 'flex')
			$('.insert-text').html('<h1>You have searched: <span class="item-searched">' + mood + '</span></h1>')

			var moodNumber;

			if ( mood === 'Sad' ) {
				moodNumber = '80|18|10752';
			} else if ( mood === 'Joyful') {
				moodNumber = '12|16|35|10751|14|10402|10749';
			} else if ( mood === 'Mad') {
				moodNumber = '28|80|53|10752';
			} else if ( mood === 'Powerful') {
				moodNumber = '28|12|14|9648|878|53';
			} else if ( mood === 'Scared') {
				moodNumber = '80|27|9648';
			} else if ( mood === 'Peaceful') {
				moodNumber = '99|10751|14|36|10402|10749';
			}

			var aFilmsFiltered = [];

			homeService.getInfoFilmByMood( moodNumber )
				.then( function( data ) {
					filterFilms( data, moodNumber, aFilmsFiltered )
				})
		}

		function filterFilms ( dataFilmSearched, moodNumber, aFilmsFiltered ) {

			var promisesDetailsFilms = [];

			console.log('********************************************************************************************************************************************************************************************************')
			console.log(dataFilmSearched.data.results)
			dataFilmSearched.data.results.forEach(function (item, i) {

				var singleFilmSearched = item;
				console.log('------------- SINGLE FILM SEARCHED -------------')
				// console.log(singleFilmSearched)
				if( singleFilmSearched.vote_count >= numVotesMinimum ) {
					if( singleFilmSearched.vote_average >= rateToFilter ){
						var yearShootFilm = singleFilmSearched.release_date.slice(0,4);
						if( yearShootFilm >= yearToFilter ) {
							var promise = homeService.getSpecificationsFilm( singleFilmSearched.id );
							promisesDetailsFilms.push(promise);
						}
					}
				}
			})

			$q.all( promisesDetailsFilms )
				.then( function ( aDataFilmSearched ){
					console.log('+++++++++++++++++++  ' + aDataFilmSearched.length + '  +++++++++++++++++++')
					aDataFilmSearched.forEach( function (item, i) {
						var durationFilm = item.data.runtime;
						console.log(durationFilm);

						if ( durationFilm >= durationToFilter) {
							if( aFilmsFiltered.length < numberFilmsToSearch ) {
								console.log(item)
								return aFilmsFiltered.push( item.data );
							}
						}
					})
				})


			if ( aFilmsFiltered.length < numberFilmsToSearch ) {
				console.log('123456789  ENTERED IN THE SECOND HOME_SERVICE  987654321')
				homeService.getInfoFilmByMood( moodNumber )
					.then( function( data ) {
						filterFilms( data, moodNumber, aFilmsFiltered )
					})
			}

			$scope.infoFilmSearched = aFilmsFiltered;
		}

		$('button').on('click', function(event){
			$('html, body').animate({
				scrollTop: $('.to-move-scroll').offset().top
			}, 500);
		});

		$('a').on('click', function(event){
			event.preventDefault();
			$('html, body').animate({
				scrollTop: $('.to-move-scroll').offset().top
			}, 500);
		});

		$('.go-top').on('click', function(event){
			event.preventDefault();
			$('html, body').animate({
				scrollTop: 0 }, 500);
		});

	})
angular.module( 'homeService', [ ] )
	.factory('homeService', function( $http, $q ) {

		var urlToSearchFilm = 'http://api.themoviedb.org/3/search/movie?api_key=71bd8c83c5cc06c197435d2165ac52e4&query=<SEARCH>';
		var urlToSearchFilmByMood = 'https://api.themoviedb.org/3/discover/movie?api_key=71bd8c83c5cc06c197435d2165ac52e4&with_genres=<MOOD_NUM>&page=<PAGE>';

		function getInfoFilm ( filmToSearch ) {
			var urlToSearchFilmChanged = urlToSearchFilm.replace('<SEARCH>', filmToSearch)
			console.log(urlToSearchFilmChanged)
			return $http.get( urlToSearchFilmChanged )
		}

		function getInfoFilmByMood ( moodNumber ) {

			var randomPage = Math.floor(Math.random() * 1000) + 1;

			var mapObj = {
				'<MOOD_NUM>': moodNumber,
				'<PAGE>': randomPage
			};
			console.log(mapObj)
			var urlToSearchFilmByMoodChanged = urlToSearchFilmByMood.replace(/<MOOD_NUM>|<PAGE>/gi, function(matched){
				return mapObj[matched];
			});
			console.log(urlToSearchFilmByMoodChanged)

			return promise = $http.get( urlToSearchFilmByMoodChanged )

		}


		// REVISAR - esta petici칩n es la misma que la de specificationsService
		var urlToGetInfoFilm = 'http://api.themoviedb.org/3/movie/<ID_MOVIE>?api_key=71bd8c83c5cc06c197435d2165ac52e4';
		function getSpecificationsFilm ( idFilmToSearch ) {
			var urlToSearchFilmChanged = urlToGetInfoFilm.replace('<ID_MOVIE>', idFilmToSearch)
			console.log(urlToSearchFilmChanged)
			return $http.get( urlToSearchFilmChanged ) // return a promise
		}


		return {
			getInfoFilm : getInfoFilm,
			getInfoFilmByMood : getInfoFilmByMood,
			getSpecificationsFilm : getSpecificationsFilm
		}

	})
angular.module( 'specificationsModule', [ ] )
	.controller( 'specificationsController' , function ( $scope, $http, $routeParams, specificationsService ) {

		$scope.imageNotFoundCover = '../../img/image-not-found-cover.jpg';
		$scope.imageNotFoundHeaderCover = '../../img/image-not-found-header-cover.jpg';
		$scope.specificationsFilmSearched = "";
		var filmId = $routeParams.FILMID;

		specificationsService.getSpecificationsFilm( filmId )
			.then( function ( dataFilmSearched ){
				$scope.specificationsFilmSearched = dataFilmSearched.data;
				console.log($scope.specificationsFilmSearched);
			})

	})
angular.module( 'specificationsService', [ ] )
	.factory('specificationsService', function( $http ) {

		var urlToSearchFilm = 'http://api.themoviedb.org/3/movie/<ID_MOVIE>?api_key=71bd8c83c5cc06c197435d2165ac52e4';

		function getSpecificationsFilm ( idFilmToSearch ) {
			var urlToSearchFilmChanged = urlToSearchFilm.replace('<ID_MOVIE>', idFilmToSearch)
			console.log(urlToSearchFilmChanged)
			return $http.get( urlToSearchFilmChanged )
		}

		return {
			getSpecificationsFilm : getSpecificationsFilm
		}

	})